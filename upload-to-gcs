#!/usr/bin/env python3

from google.cloud import storage


def set_project(gcp_project_name: str):
    global GCP_PROJECT
    GCP_PROJECT = gcp_project_name


def upload_blob(bucket_name, source_file_name, destination_blob_name):
    """Uploads a file to the bucket."""
    # The ID of your GCS bucket
    # bucket_name = "your-bucket-name"
    # The path to your file to upload
    # source_file_name = "local/path/to/file"
    # The ID of your GCS object
    # destination_blob_name = "storage-object-name"

    storage_client = storage.Client(GCP_PROJECT)
    bucket = storage_client.bucket(bucket_name)
    blob = bucket.blob(destination_blob_name)

    blob.upload_from_filename(source_file_name)

    print(f"File {source_file_name} uploaded to {destination_blob_name}.")


def upload_blob_from_memory(bucket_name, contents, destination_blob_name):
    """Uploads a file to the bucket."""

    # The ID of your GCS bucket
    # bucket_name = "your-bucket-name"

    # The contents to upload to the file
    # contents = "these are my contents"

    # The ID of your GCS object
    # destination_blob_name = "storage-object-name"

    storage_client = storage.Client(GCP_PROJECT)
    bucket = storage_client.bucket(bucket_name)
    blob = bucket.blob(destination_blob_name)

    blob.upload_from_string(contents)

    print(
        "{} with contents {} uploaded to {}.".format(
            destination_blob_name, contents, bucket_name
        )
    )


if __name__ == "__main__":
    import os
    import sys

    from dotenv import load_dotenv

    load_dotenv("config.env")
    set_project(os.getenv("GCP_PROJECT"))

    bucket = os.getenv("GCS_BUCKET")
    prefix = os.getenv("GCS_PREFIX")
    for f in sys.argv[1:]:
        upload_blob(bucket, f, prefix + f)
